volumes:
  ckan_storage:
  pg_data:
  solr_data:

services:

  ckan-dev:
    container_name: ckan-vs-dev
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env
    depends_on:
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:${CKAN_PORT}"
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./src:/srv/app/src_extensions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    
  datapusher:
    container_name: datapusher-plus
    env_file:
      - .env
    build:
      context: ./datapusher
      dockerfile: Dockerfile
    restart: always
    environment:
      - WRITE_ENGINE_URL=postgresql://ckandbuser:ckandbpassword@db/datastore
      - SQLALCHEMY_DATABASE_URI=postgresql://ckandbuser:ckandbpassword@db/ckandb
    depends_on:
      - db
    ports:
      - "8800:8800"

  db:
    container_name: ckan-vs-db
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
     
  solr:
    container_name: ckan-vs-solr
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    container_name: ckan-vs-redis
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
